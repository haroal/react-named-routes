{"version":3,"sources":["Home.tsx","User.tsx","../../src/index.tsx","App.tsx","index.tsx"],"names":["Home","React","Component","User","this","props","match","params","id","Router","registerRoutes","Object","name","route","globalRoutes","Error","path","prefix","getRoute","toUrl","pathToRegexp","compiler","router","home","component","exact","user","App","to","ReactDOM","render","document","getElementById"],"mappings":"2QAEqBA,E,uKAEjB,OACE,6BACE,yD,GAJ0BC,IAAMC,WCKnBC,E,uKAEjB,OACE,6BACE,yDAA+BC,KAAKC,MAAMC,MAAMC,OAAOC,S,GAJ7BP,IAAMC,W,6NC0DzB,IA9DTO,WAOJ,aAKEL,KAAA,gB,2BAUKM,6BACL,cAA4BC,eAA5B,kBAAoD,YAAxCC,EAAwC,KAAlCC,EAAkC,KAClD,YAAIT,KAAKU,aAAaF,GACpB,MAAMG,MAAM,oBAAD,EAAX,wBAGFX,KAAA,wBAEEY,KAAMC,EAASJ,EAAMG,S,EAUpBE,qBACL,IAAML,EAAQT,KAAKU,aAAnB,GACA,YAAID,EAAqB,MAAME,MAAM,oBAAD,EAAX,eAEzB,U,EASKI,oB,IACGH,EAASZ,KAAKc,SAASN,GAAvBI,KAGR,OAFiBI,YAAjB,EAEOC,CAAP,I,EAzDEZ,ICMNa,EAAOZ,eAAe,GAAI,CACxBa,KAAM,CAAEP,KAAM,IAAKQ,UAAWxB,EAAMyB,OAAO,GAC3CC,KAAM,CAAEV,KAAM,YAAaQ,UAAWrB,K,IAGnBwB,E,uKAEjB,OACI,kBAAC,IAAD,KACE,6BACE,4BACE,4BAEE,kBAAC,IAAD,CAAMC,GAAIN,EAAOH,MAAM,SAAvB,SAEF,4BACE,kBAAC,IAAD,CAAMS,GAAIN,EAAOH,MAAM,OAAQ,CAAEX,GAAI,KAArC,UAIJ,6BAGA,kBAAC,IAAUc,EAAOJ,SAAS,SAC3B,kBAAC,IAAUI,EAAOJ,SAAS,e,GAnBNjB,IAAMC,WCVvC2B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2242647d.chunk.js","sourcesContent":["import React from 'react'\n\nexport default class Home extends React.Component {\n  render () {\n    return (\n      <div>\n        <p>This is the home page</p>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom';\n\ntype RouteParams = {\n  id: string\n}\n\nexport default class User extends React.Component<RouteComponentProps<RouteParams>> {\n  render () {\n    return (\n      <div>\n        <p>This is the user page. ID: {this.props.match.params.id}</p>\n      </div>\n    )\n  }\n}\n","import * as pathToRegexp from 'path-to-regexp'\nimport { NamedRoutes, Route } from './typings'\n\nclass Router {\n  public globalRoutes: NamedRoutes\n\n  /**\n   * A router that will contain the routes.\n   * @constructor\n   */\n  constructor() {\n    /**\n     * Contains all the registered routes.\n     * @type {Object<string, Route>}\n     */\n    this.globalRoutes = {}\n  }\n\n  /**\n   * Registers multiple routes into the router. Adds the given prefix at the beginning of each route path.\n   * It also prevents from registering the same route name twice by throwing an Error.\n   * @param {string} prefix Root path to add to each route path.\n   * @param {NamedRoutes} routes Set of routes to register. Must contain at least a `path` property,\n   *        but can also register any extra information you want to store.\n   */\n  public registerRoutes(prefix: string, routes: NamedRoutes): void {\n    for (const [name, route] of Object.entries(routes)) {\n      if (this.globalRoutes[name] !== undefined) {\n        throw Error(`Route with name \"${name}\" already registered`)\n      }\n\n      this.globalRoutes[name] = {\n        ...route,\n        path: prefix + route.path\n      }\n    }\n  }\n\n  /**\n   * Returns all the registered route information by name.\n   * @param {string} name Name given to the route when registered.\n   * @returns {Route} the route information\n   */\n  public getRoute(name: string): Route {\n    const route = this.globalRoutes[name]\n    if (route === undefined) throw Error(`Route with name \"${name}\" not found`)\n\n    return route\n  }\n\n  /**\n   * Generates a URL from a route name. It dynamically injects the parameters inside the url.\n   * @param {string} name Name of the route\n   * @param {Object?} params Parameters to inject in the route path\n   * @returns {string} the URL\n   */\n  public toUrl(name: string, params?: any): string {\n    const { path } = this.getRoute(name)\n    const compiler = pathToRegexp.compile(path)\n\n    return compiler(params)\n  }\n}\n\n/* We return a single instance of the router */\nconst router = new Router()\nexport default router\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport Home from './Home'\nimport User from './User'\n\n/* 1. Import the router */\nimport router from 'react-named-routes'\n\n/* 2. Register your routes into the router */\nrouter.registerRoutes('', {\n  home: { path: '/', component: Home, exact: true },\n  user: { path: '/user/:id', component: User }\n})\n\nexport default class App extends React.Component {\n  render () {\n    return (\n        <Router>\n          <div>\n            <ul>\n              <li>\n                {/* 3. Use the router to dynamically generate URL from route name */}\n                <Link to={router.toUrl('home')}>Home</Link>\n              </li>\n              <li>\n                <Link to={router.toUrl('user', { id: 4 })}>User</Link>\n              </li>\n            </ul>\n\n            <hr />\n\n            {/* 4. Get the route information by name to create react-router Route components */}\n            <Route {...router.getRoute('home')} />\n            <Route {...router.getRoute('user')} />\n          </div>\n        </Router>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}